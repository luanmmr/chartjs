{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/luanribeiro/Documents/ReactJS/chartjs/src/components/ChartUsuarioMes.js\";\nimport React, { Component } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport moment from 'moment';\nexport default class ChartUsuarioMes extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chartData: '',\n      meses: [\"Janeiro\", \"Fevereiro\", \"Março\", \"Abril\", \"Maio\", \"Junho\", \"Julho\", \"Agosto\", \"Setembro\", \"Outubro\", \"Novembro\", \"Dezembro\"],\n      users: this.props.users\n    };\n    this.teste();\n  }\n\n  teste() {\n    const {\n      users\n    } = this.state;\n    let total = 0;\n    let mensais = [];\n\n    for (let mes = 1; mes <= 12; mes++) {\n      users.map(user => {\n        if (moment(user.CREATED_AT).isSame(`${2020}-${mes}`, 'month')) {\n          total++;\n        }\n\n        return 0;\n      });\n      console.log(total);\n      console.log(this.props.users);\n      mensais = [...mensais, total];\n      total = 0;\n    }\n\n    this.setState({\n      chartData: {\n        labels: this.state.meses,\n        datasets: [{\n          label: 'Criados no Mês',\n          data: mensais,\n          backgroundColor: ['rgb(255, 99, 132)', 'rgb(50, 10, 100)', 'rgb(10, 100, 100)', 'rgb(10, 100, 170)', 'rgb(120, 25, 170)', 'rgb(180, 120, 10)', 'rgb(1, 120, 10)', 'rgb(255, 99, 132)', 'rgb(50, 10, 100)', 'rgb(10, 100, 100)', 'rgb(10, 100, 2)', 'rgb(120, 25, 170)']\n        }]\n      }\n    });\n  }\n\n  componentDidMount() {}\n\n  render() {\n    const {\n      chartData\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: chartData,\n        options: {\n          maintainAspectRatio: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/luanribeiro/Documents/ReactJS/chartjs/src/components/ChartUsuarioMes.js"],"names":["React","Component","Bar","moment","ChartUsuarioMes","constructor","props","state","chartData","meses","users","teste","total","mensais","mes","map","user","CREATED_AT","isSame","console","log","setState","labels","datasets","label","data","backgroundColor","componentDidMount","render","maintainAspectRatio"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,eAAe,MAAMC,eAAN,SAA8BH,SAA9B,CAAwC;AACnDI,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,EADF;AAETC,MAAAA,KAAK,EAAE,CAAC,SAAD,EAAY,WAAZ,EAAyB,OAAzB,EAAkC,OAAlC,EAA2C,MAA3C,EAAmD,OAAnD,EAA4D,OAA5D,EAAqE,QAArE,EAA+E,UAA/E,EACC,SADD,EACY,UADZ,EACwB,UADxB,CAFE;AAITC,MAAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWI;AAJT,KAAb;AAMA,SAAKC,KAAL;AACH;;AAEDA,EAAAA,KAAK,GAAE;AACH,UAAM;AAAED,MAAAA;AAAF,QAAY,KAAKH,KAAvB;AACA,QAAIK,KAAK,GAAG,CAAZ;AACA,QAAIC,OAAO,GAAG,EAAd;;AACA,SAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,IAAI,EAAzB,EAA6BA,GAAG,EAAhC,EAAoC;AAC5BJ,MAAAA,KAAK,CAACK,GAAN,CAAUC,IAAI,IAAI;AACd,YAAIb,MAAM,CAACa,IAAI,CAACC,UAAN,CAAN,CAAwBC,MAAxB,CAAgC,GAAE,IAAK,IAAGJ,GAAI,EAA9C,EAAiD,OAAjD,CAAJ,EAA8D;AAC1DF,UAAAA,KAAK;AACR;;AACD,eAAO,CAAP;AACP,OALG;AAMJO,MAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAL,CAAWI,KAAvB;AACAG,MAAAA,OAAO,GAAG,CAAE,GAAGA,OAAL,EAAcD,KAAd,CAAV;AACAA,MAAAA,KAAK,GAAG,CAAR;AACH;;AACD,SAAKS,QAAL,CAAc;AACVb,MAAAA,SAAS,EAAE;AACEc,QAAAA,MAAM,EAAE,KAAKf,KAAL,CAAWE,KADrB;AAEEc,QAAAA,QAAQ,EAAE,CAAC;AACEC,UAAAA,KAAK,EAAE,gBADT;AAEEC,UAAAA,IAAI,EAAEZ,OAFR;AAGEa,UAAAA,eAAe,EAAE,CAAC,mBAAD,EAAsB,kBAAtB,EAA0C,mBAA1C,EACC,mBADD,EACsB,mBADtB,EAC2C,mBAD3C,EAEC,iBAFD,EAEoB,mBAFpB,EAEyC,kBAFzC,EAGC,mBAHD,EAGsB,iBAHtB,EAGyC,mBAHzC;AAHnB,SAAD;AAFZ;AADD,KAAd;AAaH;;AAEDC,EAAAA,iBAAiB,GAAE,CAElB;;AAEDC,EAAAA,MAAM,GAAE;AACJ,UAAM;AAAEpB,MAAAA;AAAF,QAAgB,KAAKD,KAA3B;AACA,wBACI;AAAA,6BACI,QAAC,GAAD;AACE,QAAA,IAAI,EAAEC,SADR;AAEE,QAAA,OAAO,EAAE;AAAEqB,UAAAA,mBAAmB,EAAE;AAAvB;AAFX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AAzDkD","sourcesContent":["import React, { Component } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport moment from 'moment';\n\nexport default class ChartUsuarioMes extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            chartData: '',\n            meses: [\"Janeiro\", \"Fevereiro\", \"Março\", \"Abril\", \"Maio\", \"Junho\", \"Julho\", \"Agosto\", \"Setembro\",\n                    \"Outubro\", \"Novembro\", \"Dezembro\"],\n            users: this.props.users\n        }\n        this.teste();\n    }\n\n    teste(){\n        const { users } = this.state;\n        let total = 0;\n        let mensais = [];\n        for (let mes = 1; mes <= 12; mes++) {\n                users.map(user => {\n                    if (moment(user.CREATED_AT).isSame(`${2020}-${mes}`, 'month')){\n                        total++;\n                    }\n                    return 0;\n            })\n            console.log(total);\n            console.log(this.props.users);\n            mensais = [ ...mensais, total];\n            total = 0;\n        }\n        this.setState({\n            chartData: {\n                         labels: this.state.meses,\n                         datasets: [{\n                                      label: 'Criados no Mês',\n                                      data: mensais,\n                                      backgroundColor: ['rgb(255, 99, 132)', 'rgb(50, 10, 100)', 'rgb(10, 100, 100)',\n                                                        'rgb(10, 100, 170)', 'rgb(120, 25, 170)', 'rgb(180, 120, 10)',\n                                                        'rgb(1, 120, 10)', 'rgb(255, 99, 132)', 'rgb(50, 10, 100)',\n                                                        'rgb(10, 100, 100)', 'rgb(10, 100, 2)', 'rgb(120, 25, 170)']\n                                   }]\n                        }\n        }) \n    }\n\n    componentDidMount(){  \n       \n    }\n\n    render(){\n        const { chartData } = this.state;\n        return (\n            <div>\n                <Bar\n                  data={chartData}\n                  options={{ maintainAspectRatio: false }}\n                />\n            </div>\n        ); \n    }\n}"]},"metadata":{},"sourceType":"module"}