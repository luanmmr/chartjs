{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/luanribeiro/Documents/ReactJS/chartjs/src/components/ChartUsuarioMes.js\";\nimport React, { Component } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport moment from 'moment';\nexport default class ChartUsuarioMes extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chartData: '',\n      meses: [\"Janeiro\", \"Fevereiro\", \"Março\", \"Abril\", \"Maio\", \"Junho\", \"Julho\", \"Agosto\", \"Setembro\", \"Outubro\", \"Novembro\", \"Dezembro\"],\n      valores: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n    };\n  }\n\n  componentDidMount() {\n    let vl_mensais = [500, 400, 800, 600, 300, 1500, 700, 800, 9, 10, 11, 12];\n    let total = 0;\n\n    for (var mes = 1; mes <= 12; mes++) {\n      this.props.users.map(user => {\n        if (moment(user.CREATED_AT).isSame(`${2020}-${mes}`, 'month')) {}\n\n        return 0;\n      });\n      vl_mensais = [...vl_mensais, total];\n      total = 0;\n    }\n\n    let data = {\n      labels: this.state.meses,\n      datasets: [{\n        label: 'Criados no Mês',\n        data: vl_mensais,\n        backgroundColor: ['rgb(255, 99, 132)', 'rgb(50, 10, 100)', 'rgb(10, 100, 100)', 'rgb(10, 100, 170)', 'rgb(120, 25, 170)', 'rgb(180, 120, 10)', 'rgb(1, 120, 10)', 'rgb(255, 99, 132)', 'rgb(50, 10, 100)', 'rgb(10, 100, 100)', 'rgb(10, 100, 2)', 'rgb(120, 25, 170)']\n      }]\n    };\n    this.setState({\n      chartData: data\n    });\n  }\n\n  render() {\n    const {\n      chartData\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: chartData,\n        options: {\n          maintainAspectRatio: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/luanribeiro/Documents/ReactJS/chartjs/src/components/ChartUsuarioMes.js"],"names":["React","Component","Bar","moment","ChartUsuarioMes","constructor","props","state","chartData","meses","valores","componentDidMount","vl_mensais","total","mes","users","map","user","CREATED_AT","isSame","data","labels","datasets","label","backgroundColor","setState","render","maintainAspectRatio"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,eAAe,MAAMC,eAAN,SAA8BH,SAA9B,CAAwC;AACnDI,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,EADF;AAETC,MAAAA,KAAK,EAAE,CAAC,SAAD,EAAY,WAAZ,EAAyB,OAAzB,EAAkC,OAAlC,EAA2C,MAA3C,EAAmD,OAAnD,EAA4D,OAA5D,EAAqE,QAArE,EAA+E,UAA/E,EACC,SADD,EACY,UADZ,EACwB,UADxB,CAFE;AAITC,MAAAA,OAAO,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,EAA5B,EAAgC,EAAhC,EAAoC,EAApC;AAJA,KAAb;AAMH;;AAEDC,EAAAA,iBAAiB,GAAE;AACf,QAAIC,UAAU,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,IAA1B,EAAgC,GAAhC,EAAqC,GAArC,EAA0C,CAA1C,EAA6C,EAA7C,EAAiD,EAAjD,EAAqD,EAArD,CAAjB;AACA,QAAIC,KAAK,GAAG,CAAZ;;AACA,SAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,IAAI,EAAzB,EAA6BA,GAAG,EAAhC,EAAoC;AAChC,WAAKR,KAAL,CAAWS,KAAX,CAAiBC,GAAjB,CAAqBC,IAAI,IAAI;AACzB,YAAId,MAAM,CAACc,IAAI,CAACC,UAAN,CAAN,CAAwBC,MAAxB,CAAgC,GAAE,IAAK,IAAGL,GAAI,EAA9C,EAAiD,OAAjD,CAAJ,EAA8D,CAE7D;;AACD,eAAO,CAAP;AACH,OALD;AAMAF,MAAAA,UAAU,GAAG,CAAE,GAAGA,UAAL,EAAiBC,KAAjB,CAAb;AACAA,MAAAA,KAAK,GAAG,CAAR;AACH;;AACD,QAAIO,IAAI,GAAG;AACCC,MAAAA,MAAM,EAAE,KAAKd,KAAL,CAAWE,KADpB;AAECa,MAAAA,QAAQ,EAAE,CAAC;AACKC,QAAAA,KAAK,EAAE,gBADZ;AAEKH,QAAAA,IAAI,EAAER,UAFX;AAGKY,QAAAA,eAAe,EAAE,CAAC,mBAAD,EAAsB,kBAAtB,EAA0C,mBAA1C,EACC,mBADD,EACsB,mBADtB,EAC2C,mBAD3C,EAEC,iBAFD,EAEoB,mBAFpB,EAEyC,kBAFzC,EAGC,mBAHD,EAGsB,iBAHtB,EAGyC,mBAHzC;AAHtB,OAAD;AAFX,KAAX;AAWA,SAAKC,QAAL,CAAc;AACVjB,MAAAA,SAAS,EAAEY;AADD,KAAd;AAGH;;AAEDM,EAAAA,MAAM,GAAE;AACJ,UAAM;AAAElB,MAAAA;AAAF,QAAgB,KAAKD,KAA3B;AACA,wBACI;AAAA,6BACI,QAAC,GAAD;AACE,QAAA,IAAI,EAAEC,SADR;AAEE,QAAA,OAAO,EAAE;AAAEmB,UAAAA,mBAAmB,EAAE;AAAvB;AAFX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AAlDkD","sourcesContent":["import React, { Component } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport moment from 'moment';\n\nexport default class ChartUsuarioMes extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            chartData: '',\n            meses: [\"Janeiro\", \"Fevereiro\", \"Março\", \"Abril\", \"Maio\", \"Junho\", \"Julho\", \"Agosto\", \"Setembro\",\n                    \"Outubro\", \"Novembro\", \"Dezembro\"],\n            valores: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n        }\n    }\n\n    componentDidMount(){\n        let vl_mensais = [500, 400, 800, 600, 300, 1500, 700, 800, 9, 10, 11, 12];\n        let total = 0;\n        for (var mes = 1; mes <= 12; mes++) {\n            this.props.users.map(user => {\n                if (moment(user.CREATED_AT).isSame(`${2020}-${mes}`, 'month')){\n             \n                }\n                return 0;\n            });\n            vl_mensais = [ ...vl_mensais, total];\n            total = 0;\n        }\n        let data = {\n                    labels: this.state.meses,\n                    datasets: [{\n                                    label: 'Criados no Mês',\n                                    data: vl_mensais,\n                                    backgroundColor: ['rgb(255, 99, 132)', 'rgb(50, 10, 100)', 'rgb(10, 100, 100)',\n                                                      'rgb(10, 100, 170)', 'rgb(120, 25, 170)', 'rgb(180, 120, 10)',\n                                                      'rgb(1, 120, 10)', 'rgb(255, 99, 132)', 'rgb(50, 10, 100)',\n                                                      'rgb(10, 100, 100)', 'rgb(10, 100, 2)', 'rgb(120, 25, 170)',]\n                              }]\n                    }\n        this.setState({\n            chartData: data\n        })\n    }\n\n    render(){\n        const { chartData } = this.state;\n        return (\n            <div>\n                <Bar\n                  data={chartData}\n                  options={{ maintainAspectRatio: false }}\n                />\n            </div>\n        ); \n    }\n}"]},"metadata":{},"sourceType":"module"}