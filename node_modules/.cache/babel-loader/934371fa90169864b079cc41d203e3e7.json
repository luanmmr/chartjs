{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/luanribeiro/Documents/ReactJS/chartjs/src/components/ChartUsuarioMes.js\";\nimport React, { Component } from 'react';\nimport { Bar } from 'react-chartjs-2';\nexport default class ChartUsuarioMes extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chartData: ''\n    };\n  }\n\n  componentDidMount() {\n    let vl_mensais = [];\n\n    for (var i = 1; i <= 12; i++) {\n      this.props.users.map(user => {\n        if (moment(user.CREATED_AT).isSame(`${2020}-${mes}`, 'month')) {\n          usuarios_mes = [...usuarios_mes, user.CREATED_AT];\n        }\n\n        return 0;\n      });\n    }\n\n    const data = {\n      labels: [\"Janeiro\", \"Fevereiro\", \"Março\", \"Abril\", \"Maio\", \"Junho\", \"Julho\"],\n      datasets: [{\n        label: 'Usuários - Mês - 2020',\n        data: [50, 10, 100, 2, 20, 150, 45],\n        backgroundColor: ['rgb(255, 99, 132)', 'rgb(50, 10, 100)', 'rgb(10, 100, 100)', 'rgb(10, 100, 170)', 'rgb(120, 25, 170)', 'rgb(180, 120, 10)', 'rgb(1, 120, 10)']\n      }]\n    };\n    this.setState({\n      chartData: data\n    });\n  }\n\n  render() {\n    const {\n      chartData\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: chartData,\n        options: {\n          maintainAspectRatio: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/luanribeiro/Documents/ReactJS/chartjs/src/components/ChartUsuarioMes.js"],"names":["React","Component","Bar","ChartUsuarioMes","constructor","props","state","chartData","componentDidMount","vl_mensais","i","users","map","user","moment","CREATED_AT","isSame","mes","usuarios_mes","data","labels","datasets","label","backgroundColor","setState","render","maintainAspectRatio"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,QAAoB,iBAApB;AAEA,eAAe,MAAMC,eAAN,SAA8BF,SAA9B,CAAwC;AACnDG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE;AADF,KAAb;AAGH;;AAEDC,EAAAA,iBAAiB,GAAE;AACf,QAAIC,UAAU,GAAG,EAAjB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,EAArB,EAAyBA,CAAC,EAA1B,EAA8B;AAC1B,WAAKL,KAAL,CAAWM,KAAX,CAAiBC,GAAjB,CAAqBC,IAAI,IAAI;AACzB,YAAIC,MAAM,CAACD,IAAI,CAACE,UAAN,CAAN,CAAwBC,MAAxB,CAAgC,GAAE,IAAK,IAAGC,GAAI,EAA9C,EAAiD,OAAjD,CAAJ,EAA8D;AAC1DC,UAAAA,YAAY,GAAG,CAAE,GAAGA,YAAL,EAAmBL,IAAI,CAACE,UAAxB,CAAf;AACH;;AACG,eAAO,CAAP;AACP,OALD;AAMH;;AACD,UAAMI,IAAI,GAAG;AACGC,MAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,WAAZ,EAAyB,OAAzB,EAAkC,OAAlC,EAA2C,MAA3C,EAAmD,OAAnD,EAA4D,OAA5D,CADX;AAEGC,MAAAA,QAAQ,EAAE,CAAC;AACKC,QAAAA,KAAK,EAAE,uBADZ;AAEKH,QAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,GAAT,EAAc,CAAd,EAAiB,EAAjB,EAAqB,GAArB,EAA0B,EAA1B,CAFX;AAGKI,QAAAA,eAAe,EAAE,CACG,mBADH,EAEG,kBAFH,EAGG,mBAHH,EAIG,mBAJH,EAKG,mBALH,EAMG,mBANH,EAOG,iBAPH;AAHtB,OAAD;AAFb,KAAb;AAgBA,SAAKC,QAAL,CAAc;AACVjB,MAAAA,SAAS,EAAEY;AADD,KAAd;AAGH;;AAEDM,EAAAA,MAAM,GAAE;AACJ,UAAM;AAAElB,MAAAA;AAAF,QAAgB,KAAKD,KAA3B;AACA,wBACI;AAAA,6BACI,QAAC,GAAD;AACE,QAAA,IAAI,EAAEC,SADR;AAEE,QAAA,OAAO,EAAE;AAAEmB,UAAAA,mBAAmB,EAAE;AAAvB;AAFX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AAjDkD","sourcesContent":["import React, { Component } from 'react';\nimport { Bar } from 'react-chartjs-2';\n\nexport default class ChartUsuarioMes extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            chartData: ''\n        }\n    }\n\n    componentDidMount(){\n        let vl_mensais = [];\n        for (var i = 1; i <= 12; i++) {\n            this.props.users.map(user => {\n                if (moment(user.CREATED_AT).isSame(`${2020}-${mes}`, 'month')){\n                    usuarios_mes = [ ...usuarios_mes, user.CREATED_AT];\n                }\n                    return 0;\n            });\n        }\n        const data = {\n                        labels: [\"Janeiro\", \"Fevereiro\", \"Março\", \"Abril\", \"Maio\", \"Junho\", \"Julho\"],\n                        datasets: [{\n                                        label: 'Usuários - Mês - 2020',\n                                        data: [50, 10, 100, 2, 20, 150, 45],\n                                        backgroundColor: [\n                                                            'rgb(255, 99, 132)',\n                                                            'rgb(50, 10, 100)',\n                                                            'rgb(10, 100, 100)',\n                                                            'rgb(10, 100, 170)',\n                                                            'rgb(120, 25, 170)',\n                                                            'rgb(180, 120, 10)',\n                                                            'rgb(1, 120, 10)'\n                                                        ]\n                                    }]\n                    }\n        this.setState({\n            chartData: data\n        })\n    }\n\n    render(){\n        const { chartData } = this.state;\n        return (\n            <div>\n                <Bar\n                  data={chartData}\n                  options={{ maintainAspectRatio: false }}\n                />\n            </div>\n        ); \n    }\n}"]},"metadata":{},"sourceType":"module"}